一 宗旨：用java语言做一个能够提供静态资源、
	 可封装，可定制的动态请求数据。
	 可分布式集群部署，能够承载一定的并发量的HTTP服务器。
	 说白了，就是要把tomcat和Apache httpd的一些基本功能做出来。总之可以做一个网站服务器就行。
二 目标和要求
  1 目录结构模拟tomcat。
  2 手动实现分布式缓存和集群。缓存不使用redis。因为还没用过。
  3 目标或意义：当我对web服务器一无所知，就开始学习使用的时候。我很痛恨自己，更痛恨别人。为什么没有机会让我搞清楚为什么要学
  			才去学，学了之后又不能让我找到一份理想的工作。出于最初的不痛快和现在的找工作的忧愁。我决定静下心来，试着用自己理解
  			的方式去写一些属于我的东西。说到其意义，我不知道我能写出什么样的东西。毕竟水平有限，
  			学java到使用java才1年零11个月。我尽我所能吧。希望能找到一份好的工作。
  4 名字：MiniHTTP
  
三 功能
  响应HTTP请求 
  			静态资源：js,html,css,图片等资源，文件上传，下载。
  			动态请求：.action结尾请求。访问的是一个实例中的不同方法。
  			
 分布式集群
 			缓存：MiniCache
 			测试： 将MiniHTTP运行在两台计算机上。将缓存服务器运行在第三台计算机上。
 				 页面上发生任何请求时，经过缓存服务器。缓存服务器有数据的话。直接从缓存服务器返回。
 				 没有数据，则再从运行MiniHTTP的计算机上获取数据。也就是不论什么东西，都会先经过缓存服务器。
四 开发
	HTTP响应服务：
		    	启动
		    	线程池管理客户端。
		    		目录解析，映射。
		    		解析请求： 同步请求 
			    			异步请求
			    	返回响应：
			    			同步响应
			    			异步响应
			    			
						   action:提供接口规范，调用用户开发的java类。
					
					权限认证：
			    		   
			    	
		    	
 	
 			